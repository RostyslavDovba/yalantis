{"version":3,"sources":["redux/actions/index.js","components/EmployeesList/Employee/Employee.js","components/EmployeesList/EmployeesList.js","components/BirthdayList/PersonBirthday/PersonBirthday.js","components/BirthdayList/BirthdayList.js","components/App/App.js","redux/reducers/usersReducer.js","redux/reducers/index.js","index.js"],"names":["FETCH_USERS","SELECT_USER","activeObj","Employee","firstName","lastName","isActive","id","useState","window","localStorage","getItem","active","setIsActive","dispatch","useDispatch","handleActive","item","setItem","a","Object","entries","forEach","el","removeItem","type","payload","className","checked","onChange","EmployeesList","userList","useSelector","state","users","useEffect","axios","get","response","data","map","birthdayListLS","filter","birthdayList","includes","split","index","people","per","charAt","toLowerCase","toUpperCase","length","sort","b","person","PersonBirthday","birthday","birthdayDate","Date","getDate","monthNames","getMonth","getFullYear","mothsFromToday","slice","concat","BirthdayList","activeUsers","mothBirthdays","dob","birthdayPerson","App","initialState","userReducer","action","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1883a415.chunk.js","sourcesContent":["import axios from 'axios';\r\nexport const FETCH_USERS = 'FETCH_USERS';\r\nexport const SELECT_USER = 'SELECT_USER';\r\n\r\nexport const fetchUsers = () => async (dispatch) => {\r\n  const response = await axios.get(\r\n    'https://yalantis-react-school-api.yalantis.com/api/task0/users'\r\n  );\r\n\r\n  let data = response.data.map((el) => ({\r\n    ...el,\r\n    isActive: window.localStorage.getItem(el.id) || 'not-active',\r\n  }));\r\n\r\n  const birthdayListLS = Object.entries(localStorage)\r\n    .filter((el) => el[1] === 'active')\r\n    .map((el) => el[0]);\r\n\r\n  const birthdayList =\r\n    data && data.filter((item) => birthdayListLS.includes(item.id));\r\n\r\n  dispatch({\r\n    type: FETCH_USERS,\r\n    payload: { data, birthdayList },\r\n  });\r\n};\r\n\r\nexport const selectUser = (item) => async (dispatch) => {\r\n  Object.entries(localStorage).forEach((el) =>\r\n    el[1] === 'not-active' ? window.localStorage.removeItem(el[0]) : null\r\n  );\r\n  dispatch({\r\n    type: SELECT_USER,\r\n    payload: item,\r\n  });\r\n};\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { selectUser } from '../../../redux/actions';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Employee.css';\r\n\r\nconst activeObj = {\r\n  active: 'active',\r\n  notActive: 'not-active',\r\n};\r\n\r\nconst Employee = ({ firstName, lastName, isActive, id }) => {\r\n  const [active, setIsActive] = useState(\r\n    window.localStorage.getItem(id) || isActive\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  const handleActive = () => {\r\n    active === activeObj.active\r\n      ? setIsActive(activeObj.notActive)\r\n      : setIsActive(activeObj.active);\r\n    window.localStorage.setItem(\r\n      id,\r\n      active === activeObj.active ? activeObj.notActive : activeObj.active\r\n    );\r\n\r\n    dispatch(\r\n      selectUser({\r\n        id,\r\n        isActive:\r\n          active === activeObj.active ? activeObj.notActive : activeObj.active,\r\n        firstName,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"person\">\r\n      <div\r\n        className={`d-flex person-name ${\r\n          active === activeObj.active ? activeObj.active : ''\r\n        }`}\r\n      >{`${firstName} ${lastName}`}</div>\r\n      <div>\r\n        <label className=\"d-flex person-name\">\r\n          <input\r\n            type=\"radio\"\r\n            checked={active === activeObj.notActive}\r\n            onChange={handleActive}\r\n          ></input>\r\n          not active\r\n        </label>\r\n        <label className=\"d-flex person-name\">\r\n          <input\r\n            type=\"radio\"\r\n            checked={active === activeObj.active}\r\n            onChange={handleActive}\r\n          ></input>\r\n          active\r\n        </label>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nEmployee.propTypes = {\r\n  firstName: PropTypes.string,\r\n  lastName: PropTypes.string,\r\n  isActive: PropTypes.string,\r\n  id: PropTypes.string,\r\n};\r\n\r\nexport default Employee;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport './EmployeesList.css';\r\nimport { fetchUsers } from '../../redux/actions';\r\nimport Employee from './Employee/Employee';\r\n\r\nconst alphabet = 'abcdefghijklmnopqrstuvwxyz';\r\n\r\nconst EmployeesList = () => {\r\n  const dispatch = useDispatch();\r\n  const userList = useSelector((state) => state.users.users);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchUsers());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className=\"employees\">\r\n      <h2 className=\"employees-title\">Employees</h2>\r\n      <div className=\"list-wr\">\r\n        {alphabet.split('').map((el, index) => {\r\n          const people =\r\n            userList &&\r\n            userList.filter(\r\n              (per) =>\r\n                per.firstName.charAt(0).toLowerCase() === el.toLowerCase()\r\n            );\r\n          return (\r\n            <div className=\"category\" key={`el_${index}`}>\r\n              <div className=\"category-letter\">{el.toUpperCase()}</div>\r\n              <div className=\"category-people\">\r\n                {people && people.length ? (\r\n                  people\r\n                    .sort(function (a, b) {\r\n                      if (a.firstName < b.firstName) {\r\n                        return -1;\r\n                      }\r\n                      if (a.firstName > b.firstName) {\r\n                        return 1;\r\n                      }\r\n                      return 0;\r\n                    })\r\n                    .map((person) => {\r\n                      return (\r\n                        <Employee\r\n                          key={person.id}\r\n                          firstName={person.firstName}\r\n                          lastName={person.lastName}\r\n                          isActive={person.isActive}\r\n                          id={person.id}\r\n                        />\r\n                      );\r\n                    })\r\n                ) : (\r\n                  <div className=\"person-name\">No Employees</div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmployeesList;\r\n","import React from 'react';\r\nimport './PersonBirthday.css';\r\nimport { monthNames } from '../BirthdayList';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PersonBirthday = ({ firstName, lastName, birthday }) => {\r\n  const birthdayDate = new Date(birthday);\r\n  return (\r\n    <div className=\"person-birthday\">\r\n      <div>{`${firstName} ${lastName} - ${birthdayDate.getDate()}\r\n      ${\r\n        monthNames[birthdayDate.getMonth()]\r\n      }, ${birthdayDate.getFullYear()}`}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nPersonBirthday.propTypes = {\r\n  firstName: PropTypes.string,\r\n  lastName: PropTypes.string,\r\n  birthday: PropTypes.string,\r\n};\r\n\r\nexport default PersonBirthday;\r\n","import React from 'react';\r\nimport './BirthdayList.css';\r\nimport { useSelector } from 'react-redux';\r\nimport PersonBirthday from './PersonBirthday/PersonBirthday';\r\n\r\nexport const monthNames = [\r\n  'January',\r\n  'February',\r\n  'March',\r\n  'April',\r\n  'May',\r\n  'June',\r\n  'July',\r\n  'August',\r\n  'September',\r\n  'October',\r\n  'November',\r\n  'December',\r\n];\r\n\r\nconst mothsFromToday = monthNames\r\n  .slice(new Date().getMonth())\r\n  .concat(monthNames.slice(0, new Date().getMonth()));\r\n\r\nconst BirthdayList = () => {\r\n  const birthdayList = useSelector((state) => state.users.activeUsers);\r\n\r\n  return (\r\n    <div className=\"birthday-list-wr\">\r\n      <h2>Employees birthday</h2>\r\n      <div className=\"birthday-list-wr\">\r\n        {mothsFromToday && mothsFromToday.length ? (\r\n          mothsFromToday.map((el, index) => {\r\n            const mothBirthdays =\r\n              birthdayList &&\r\n              birthdayList.filter(\r\n                (birthday) =>\r\n                  monthNames[new Date(birthday.dob).getMonth()] === el\r\n              );\r\n            return (\r\n              <div className=\"category-month\" key={`${el}_${index}`}>\r\n                <div className=\"month-name\">{el}</div>\r\n                <div className=\"category-list\">\r\n                  {mothBirthdays && mothBirthdays.length ? (\r\n                    mothBirthdays\r\n                      .sort(function (a, b) {\r\n                        if (a.lastName < b.lastName) {\r\n                          return -1;\r\n                        }\r\n                        if (a.lastName > b.lastName) {\r\n                          return 1;\r\n                        }\r\n                        return 0;\r\n                      })\r\n                      .map((birthdayPerson) => {\r\n                        return (\r\n                          <PersonBirthday\r\n                            key={birthdayPerson.id}\r\n                            lastName={birthdayPerson.lastName}\r\n                            firstName={birthdayPerson.firstName}\r\n                            birthday={birthdayPerson.dob}\r\n                          />\r\n                        );\r\n                      })\r\n                  ) : (\r\n                    <div>No Employees</div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })\r\n        ) : (\r\n          <div>Employees List is empty</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BirthdayList;\r\n","import React from 'react';\nimport './App.css';\nimport EmployeesList from '../EmployeesList/EmployeesList';\nimport BirthdayList from '../BirthdayList/BirthdayList';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <EmployeesList />\n      <BirthdayList />\n    </div>\n  );\n};\n\nexport default App;\n","import { FETCH_USERS, SELECT_USER } from '../actions';\r\n\r\nconst initialState = {\r\n  activeUsers: [],\r\n  users: [],\r\n};\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_USERS:\r\n      return {\r\n        ...state,\r\n        users: action.payload.data,\r\n        activeUsers: action.payload.birthdayList,\r\n      };\r\n\r\n    case SELECT_USER:\r\n      const birthdayListLS = Object.entries(localStorage)\r\n        .filter((el) => el[1] === 'active')\r\n        .map((el) => el[0]);\r\n\r\n      const birthdayList =\r\n        state.users &&\r\n        state.users.filter((item) => birthdayListLS.includes(item.id));\r\n\r\n      return {\r\n        ...state,\r\n        activeUsers: [...birthdayList],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","import { combineReducers } from 'redux';\r\nimport userReducer from './usersReducer';\r\n\r\nexport default combineReducers({\r\n  users: userReducer,\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from './redux/reducers';\nimport { Provider } from 'react-redux';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\nif (module.hot) module.hot.accept();\n"],"sourceRoot":""}